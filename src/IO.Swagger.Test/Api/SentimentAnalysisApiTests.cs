/* 
 * Brainrex API Explorer
 *
 * Welcome to the Brainrex API explorer, we make analytics tools for crypto and blockchain. Our currently propiertary models offer sentiment analysis, market making, blockchain monitoring and face-id verification. This AI models can be consumed from this API. We also offer integrations to open data and propietary data providers, as well as free test data we collect. There is a collection of data transformation tools. Join our Telegram group to get the latest news and ask questions [https://t.me/brainrex, #brainrex](https://t.me/brainrex). More about Brainrex at [https://brainrex.com](http://brainrex.com). Full Documentation can be found at [https://brainrexapi.github.io/docs](https://brainrexapi.github.io/docs)
 *
 * OpenAPI spec version: 0.1.1
 * Contact: support@brainrex.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing SentimentAnalysisApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SentimentAnalysisApiTests
    {
        private SentimentAnalysisApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SentimentAnalysisApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SentimentAnalysisApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SentimentAnalysisApi
            //Assert.IsInstanceOfType(typeof(SentimentAnalysisApi), instance, "instance is a SentimentAnalysisApi");
        }

        
        /// <summary>
        /// Test SentimentGetPriceSentiment
        /// </summary>
        [Test]
        public void SentimentGetPriceSentimentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Text1 text = null;
            //var response = instance.SentimentGetPriceSentiment(text);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test SentimentGetSentiment
        /// </summary>
        [Test]
        public void SentimentGetSentimentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Text text = null;
            //var response = instance.SentimentGetSentiment(text);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
    }

}
