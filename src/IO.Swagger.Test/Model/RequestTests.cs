/* 
 * Brainrex API Explorer
 *
 * Welcome to the Brainrex API explorer, we make analytics tools for crypto and blockchain. Our currently propiertary models offer sentiment analysis, market making, blockchain monitoring and face-id verification. This AI models can be consumed from this API. We also offer integrations to open data and propietary data providers, as well as free test data we collect. There is a collection of data transformation tools. Join our Telegram group to get the latest news and ask questions [https://t.me/brainrex, #brainrex](https://t.me/brainrex). More about Brainrex at [https://brainrex.com](http://brainrex.com). Full Documentation can be found at [https://brainrexapi.github.io/docs](https://brainrexapi.github.io/docs)
 *
 * OpenAPI spec version: 0.1.1
 * Contact: support@brainrex.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing Request
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class RequestTests
    {
        // TODO uncomment below to declare an instance variable for Request
        //private Request instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Request
            //instance = new Request();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Request
        /// </summary>
        [Test]
        public void RequestInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Request
            //Assert.IsInstanceOfType<Request> (instance, "variable 'instance' is a Request");
        }


        /// <summary>
        /// Test the property 'Blockchain'
        /// </summary>
        [Test]
        public void BlockchainTest()
        {
            // TODO unit test for the property 'Blockchain'
        }
        /// <summary>
        /// Test the property 'Market'
        /// </summary>
        [Test]
        public void MarketTest()
        {
            // TODO unit test for the property 'Market'
        }
        /// <summary>
        /// Test the property 'DataFormat'
        /// </summary>
        [Test]
        public void DataFormatTest()
        {
            // TODO unit test for the property 'DataFormat'
        }
        /// <summary>
        /// Test the property 'Orient'
        /// </summary>
        [Test]
        public void OrientTest()
        {
            // TODO unit test for the property 'Orient'
        }
        /// <summary>
        /// Test the property 'StartDate'
        /// </summary>
        [Test]
        public void StartDateTest()
        {
            // TODO unit test for the property 'StartDate'
        }
        /// <summary>
        /// Test the property 'EndDate'
        /// </summary>
        [Test]
        public void EndDateTest()
        {
            // TODO unit test for the property 'EndDate'
        }

    }

}
